// 任务描述
// 本关任务：给出一个正整数 n，然后对这个数字一直进行下面的操作：
// 如果这个数字是奇数，那么将其乘 3 再加 1，否则除以 2。经过若干次循环后，最终都会回到 1。
// 经过验证，很大的数字都可以按照这样的方式变成 1，所以被称为“冰雹猜想”。
// 例如：当 n 是 20，变化的过程是 [20, 10, 5, 16, 8, 4, 2, 1]； 而当 n 是 1 的时候，变化的过程是 [1]。
// 根据给定的数字 n，验证这个猜想，即输出整个变化序列。

// 编程要求
// 根据提示，在右侧编辑器补充代码，用户输入正整数 n，验证这个猜想，即输出整个变化序列。
// 要求定义并调用函数 valid(n)来输出“冰雹猜想”的整个变化序列。

// 测试说明
// 平台会对你编写的代码进行测试：

// 测试输入：20
// 预期输出：
// 20 10 5 16 8 4 2 1

#include <iostream>

using namespace std;

void valid(int n);

int main(){
    int* n = new int;
    cin>> *n;
    valid(*n);
    delete n;
    return 0;
}

void valid(int n){
    while(n != 1){
        cout<< n << ' ';
        if(n%2==0){
            n/=2;
        }
        else{
            n = n*3 + 1;
        }
    }
    cout<< 1;

    return;
}